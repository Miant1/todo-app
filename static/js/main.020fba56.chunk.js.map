{"version":3,"sources":["App.module.scss","components/TodoForm.js","components/TodoList.js","App.js","reportWebVitals.js","index.js","components/TodoForm.module.scss","components/TodoList.module.scss"],"names":["module","exports","TodoForm","addTask","useState","value","setValue","handleSubmit","e","preventDefault","onSubmit","onChange","event","currentTarget","console","log","onKeyPress","key","className","style","input","type","placeholder","button","TodoList","todo","removeTask","item","text","task","onClick","id","App","setTodo","deleteTask","filter","app","newItem","Math","random","toString","substr","complete","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,IAAM,mB,8JCmCTC,EAlCE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACf,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAMMC,EAAe,SAACC,GAClBA,EAAEC,iBACFN,EAAQE,GACRC,EAAS,KASb,OACI,uBAAMI,SAAUH,EAAhB,UACI,uBACIF,MAAOA,EACPM,SApBS,SAACC,GAClBN,EAASM,EAAMC,cAAcR,OAC7BS,QAAQC,IAAIV,IAmBJW,WAXW,SAACR,GACP,UAAVA,EAAES,KACDV,EAAaC,IAUTU,UAAWC,IAAMC,MACjBC,KAAK,OACLC,YAAY,iBAChB,wBACIJ,UAAWC,IAAMI,OADrB,qB,gBCfGC,EAbE,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WAErB,OACI,sBAAmBR,UAAWC,IAAMQ,KAApC,UACI,sBAAKT,UAAWC,IAAMS,KAAtB,UACI,uBAAOP,KAAK,aACZ,4BAAII,EAAKI,UAEb,mBAAGC,QAAS,kBAAMJ,EAAWD,EAAKM,KAAKb,UAAU,mBAL3CO,EAAKM,KCqCRC,MArCf,WACE,MAAwB5B,mBAAS,IAAjC,mBAAOqB,EAAP,KAAaQ,EAAb,KAaMC,EAAa,SAACH,GAClBE,EAAQ,YAAIR,EAAKU,QAAO,SAACV,GAAD,OAAUA,EAAKM,KAAOA,QAGhD,OADAjB,QAAQC,IAAIU,GAER,sBAAKP,UAAWC,IAAMiB,IAAtB,UACE,sCACA,oDACA,cAAC,EAAD,CAAUjC,QAnBA,SAACE,GACf,GAAGA,EAAM,CACP,IAAMgC,EAAU,CACdN,GAAIO,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAE,GACxCZ,KAAMxB,EACNqC,UAAU,GAEZT,EAAQ,GAAD,mBAAKR,GAAL,CAAWY,SAcdZ,EAAKkB,KAAI,SAAClB,GACR,OACI,cAAC,EAAD,CACIA,KAAMA,EACNC,WAAYQ,WCrBjBU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA5C,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,OAAS,2B,kBCA3DD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,0B","file":"static/js/main.020fba56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};","import style from \"./TodoForm.module.scss\"\nimport React, {useState} from \"react\";\nconst TodoForm = ({addTask}) => {\n    const [value, setValue] = useState('');\n\n    const handleChange = (event) => {\n        setValue(event.currentTarget.value);\n        console.log(value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addTask(value);\n        setValue('');\n\n    }\n    const handleKeyPress = (e) => { //для того что бы добавлять таски с помощью enter\n        if(e.key === 'Enter'){\n            handleSubmit(e);\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                value={value}\n                onChange={handleChange}\n                onKeyPress={handleKeyPress}\n                className={style.input}\n                type=\"text\"\n                placeholder='Text here...'/>\n            <button\n                className={style.button}>Add</button>\n        </form>\n    )\n}\n\nexport default TodoForm;","import React from 'react'\nimport style from \"./TodoList.module.scss\"\nconst TodoList = ({todo, removeTask}) => {\n\n    return(\n        <div key={todo.id} className={style.item}>\n            <div className={style.text}>\n                <input type=\"checkbox\"/>\n                <p>{todo.task}</p>\n            </div>\n            <i onClick={() => removeTask(todo.id)} className=\"fas fa-trash\"/>\n        </div>\n    )\n}\n\nexport default TodoList;","import style from \"./App.module.scss\"\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport React, {useState} from \"react\";\n\nfunction App() {\n  const [todo, setTodo] = useState([]);\n\n  const addTask = (value) => {\n    if(value){\n      const newItem = {\n        id: Math.random().toString(36).substr(2,5),\n        task: value,\n        complete: false\n      }\n      setTodo([...todo, newItem]);\n    }\n  }\n\n  const deleteTask = (id) => {\n    setTodo([...todo.filter((todo) => todo.id !== id)])\n  }\n  console.log(todo);\n  return (\n      <div className={style.app}>\n        <h1>Todo</h1>\n        <h3>by Anton Milasenko</h3>\n        <TodoForm addTask={addTask}/>\n        {\n          todo.map((todo) => {\n            return (\n                <TodoList\n                    todo={todo}\n                    removeTask={deleteTask}\n                />\n            )\n          })\n        }\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TodoForm_input__2toxY\",\"button\":\"TodoForm_button__7w5Yo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoList_item__2ZzEk\",\"text\":\"TodoList_text__21gwK\"};"],"sourceRoot":""}